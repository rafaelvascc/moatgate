@addTagHelper *, MoatGate
@model MoatGate.Pages.Resources.Api.CreateEditModel
@{
    var UserClaimsOptions = (List<SelectListItem>)ViewData["UserClaimsOptions"];
}
<section data-scope="partials-api-resource-scopes">

    <select class="form-control" id="ddl-claims-base" asp-items="UserClaimsOptions" multiple data-placeholder="Select User Claims"></select>
    <table class="table table-condensed table-responsive table-striped table-hover table-bordered" id="tbl-api-resource-scope">
        <thead>
            <tr>
                <th>
                    Name <help text="The unique name of the scope. This is the value a client will use for the scope parameter in the authorize/token request."></help>
                </th>
                <th>
                    Display Name <help text="This value can be used e.g. on the consent screen."></help>
                </th>
                <th>
                    Description <help text="This value can be used e.g. on the consent screen."></help>
                </th>
                <th>
                    Available User Claims <help text="List of associated user claim types that should be included in the access token. The claims specified here will be added to the list of claims specified for the API."></help>
                </th>
                <th>
                </th>
                <th class="column-control-1">
                    <button type="button" class="btn btn-sm btn-primary pull-right" id="btn-add-api-resource-scope" title="Add Api Resource Scopes"><i class="fas fa-plus"></i></button>
                </th>
            </tr>
        </thead>
        <tbody>
            @{ int i = 0; }
            @foreach (var item in Model.ApiResource.Scopes)
            {
                <tr class="scopeValues" data-index="@i">
                    <td>
                        <input type="hidden" class="form-control" name="ApiResource.Scopes[@i.ToString()].ApiResourceId" value="@item.ApiResourceId" />
                        <input type="hidden" class="form-control" name="ApiResource.Scopes[@i.ToString()].Id" value="@item.Id" />
                        <input type="text" class="form-control" name="ApiResource.Scopes[@i.ToString()].Name" value="@item.Name" />
                    </td>
                    <td>
                        <input type="text" class="form-control" name="ApiResource.Scopes[@i.ToString()].DisplayName" value="@item.DisplayName" />
                    </td>
                    <td>
                        <input type="text" class="form-control" name="ApiResource.Scopes[@i.ToString()].Description" value="@item.Description" />
                    </td>
                    <td>
                        <select class="form-control select-user-claims" asp-for="ScopeUserClaims[item.Id.ToString()]" asp-items="UserClaimsOptions" multiple data-placeholder="Select User Claims"></select>
                    </td>
                    <td>
                        <div class="form-group">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" class="scopeCheckbox" @{if (item.Required) { <text> checked </text>  } } /> Required
                                    <input type="hidden" class="scopeCheckboxHiddentTextValue" name="ApiResource.Scopes[@i.ToString()].Required"
                                           @{if (item.Required) { <text> value="true" </text>  } else { <text> value="false" </text>  } } />
                                    <help text="Specifies whether the user can de-select the scope on the consent screen (if the consent screen wants to implement such a feature). Defaults to false."></help>
                                </label>
                            </div>
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" class="scopeCheckbox" @{if (item.Emphasize) { <text> checked </text>  } } /> Emphasize
                                    <input type="hidden" class="scopeCheckboxHiddentTextValue" name="ApiResource.Scopes[@i.ToString()].Emphasize"
                                           @{if (item.Emphasize) { <text> value="true" </text>  } else { <text> value="false" </text>  } } />
                                    <help text="Specifies whether the consent screen will emphasize this scope (if the consent screen wants to implement such a feature). Use this setting for sensitive or important scopes. Defaults to false."></help>
                                </label>
                            </div>
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" class="scopeCheckbox" @{if (item.ShowInDiscoveryDocument) { <text> checked </text>  } } /> Show In Discovery Document
                                    <input type="hidden" class="scopeCheckboxHiddentTextValue" name="ApiResource.Scopes[@i.ToString()].ShowInDiscoveryDocument"
                                           @{if (item.ShowInDiscoveryDocument) { <text> value="true" </text>  } else { <text> value="false" </text>  } } />
                                    <help text="Specifies whether this scope is shown in the discovery document. Defaults to true."></help>
                                </label>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="btn-group btn-group-sm pull-right">
                            <button type="button" class="btn btn-sm btn-danger  btn-delete-api-resource-scope" title="Delete"><i class="fas fa-trash-alt"></i></button>
                        </div>
                    </td>
                </tr>
                i++;
            }
        </tbody>
    </table>
    <script id="api-resource-scope-template" type="text/x-jsrender">
        <tr class="scopeValues">
            <td>
                <input type="hidden" class="form-control" name="ApiResource.Scopes[{{:index}}].Id" value="{{:id}}" />
                <input type="text" class="form-control" name="ApiResource.Scopes[{{:index}}].Name" value="{{:name}}" />
            </td>
            <td>
                <input type="text" class="form-control" name="ApiResource.Scopes[{{:index}}].DisplayName" value="{{:displayName}}" />
            </td>
            <td>
                <input type="text" class="form-control" name="ApiResource.Scopes[{{:index}}].Description" value="{{:description}}" />
            </td>
            <td class="claims-cell"></td>
            <td>
                <div class="form-group">
                    <div class="checkbox">
                        <label>
                            <input type="checkbox" class="scopeCheckbox" /> Required
                            <input type="hidden" class="scopeCheckboxHiddentTextValue" name="ApiResource.Scopes[{{:index}}].Required" value="false" />
                        </label>
                    </div>
                    <div class="checkbox">
                        <label>
                            <input type="checkbox" class="scopeCheckbox" /> Emphasize
                            <input type="hidden" class="scopeCheckboxHiddentTextValue" name="ApiResource.Scopes[{{:index}}].Emphasize" value="false" />
                        </label>
                    </div>
                    <div class="checkbox">
                        <label>
                            <input type="checkbox" class="scopeCheckbox" checked /> Show In Discovery Document
                            <input type="hidden" class="scopeCheckboxHiddentTextValue" name="ApiResource.Scopes[{{:index}}].ShowInDiscoveryDocument" value="true" />
                        </label>
                    </div>
                </div>
            </td>
            <td>
                <div class="btn-group btn-group-sm pull-right">
                    <button type="button" class="btn btn-sm btn-danger btn-delete-api-resource-scope" title="Delete"><i class="fas fa-trash-alt"></i></button>
                </div>
            </td>
        </tr>
    </script>
</section>